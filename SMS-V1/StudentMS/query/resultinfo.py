# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'resultinfo.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import sys
sys.path.append("../")
from service import service

class Ui_MainWindow(QMainWindow):
    def __init__(self):
        super(Ui_MainWindow,self).__init__()
        self.setupUi(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1193, 598)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(130, 30, 81, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(350, 30, 81, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(570, 30, 81, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.btnQuery = QtWidgets.QPushButton(self.centralwidget)
        self.btnQuery.setGeometry(QtCore.QRect(850, 30, 71, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnQuery.setFont(font)
        self.btnQuery.setObjectName("btnQuery")
        self.btnQuery_2 = QtWidgets.QPushButton(self.centralwidget)
        self.btnQuery_2.setGeometry(QtCore.QRect(960, 30, 61, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnQuery_2.setFont(font)
        self.btnQuery_2.setObjectName("btnQuery_2")
        self.editStuName = QtWidgets.QLineEdit(self.centralwidget)
        self.editStuName.setGeometry(QtCore.QRect(210, 30, 101, 31))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(10)
        self.editStuName.setFont(font)
        self.editStuName.setObjectName("editStuName")
        self.cboExamKind = QtWidgets.QComboBox(self.centralwidget)
        self.cboExamKind.setGeometry(QtCore.QRect(430, 30, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.cboExamKind.setFont(font)
        self.cboExamKind.setObjectName("cboExamKind")
        self.cboSubject = QtWidgets.QComboBox(self.centralwidget)
        self.cboSubject.setGeometry(QtCore.QRect(650, 30, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.cboSubject.setFont(font)
        self.cboSubject.setObjectName("cboSubject")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(40, 100, 1121, 431))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1193, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.bindExamKind()  # 绑定kind组合框
        self.bindSubject()  # 绑定sub组合框
        self.btnQuery.clicked.connect(self.query) # 查询按钮绑定槽函数
        self.btnQuery_2.clicked.connect(self.close)

    def bindExamKind(self):
        self.cboExamKind.addItem("全部")
        resu = service.query("SELECT kindName FROM tb_examkinds;")
        for i in resu:
            self.cboExamKind.addItem(i[0])

    def query(self):
        self.tableWidget.setRowCount(0) # 清空全部行
        stuName = self.editStuName.text()
        examKind = self.cboExamKind.currentText()
        examSubject = self.cboSubject.currentText()
        if stuName == '':
            if examKind == '全部':
                if examSubject == '全部':  # 查询全部的数据
                    result = service.query(
                        "SELECT stuID,stuName,CONCAT(gradeName,'',className),kindName,subName,result FROM v_resultinfo;")
                else: # 依据考试科目去查询
                    result = service.query("SELECT stuID,stuName,CONCAT(gradeName,' ',className),kindName,subName,result FROM v_resultinfo WHERE subName = %s;",examSubject)
            else:
                if examSubject == '全部': # 依据考试类型examkinds查询
                    result = service.query("SELECT stuID,stuName,CONCAT(gradeName,' ',className),kindName,subName,result FROM v_resultinfo WHERE kindName=%s;",examKind)
                else: # yiju考试类型和科目查询
                    result = service.query("SELECT stuID,stuName,CONCAT(gradeName,' ',className),kindName,subName,result FROM v_resultinfo WHERE subName = %s and kindName=%s;",examSubject,examKind)
        else:  # 当姓不为空值时
            if examKind == '全部':
                if examSubject == '全部': # 依据姓名
                    result = service.query(
                        "SELECT stuID,stuName,CONCAT(gradeName,' ',className),kindName,subName,result FROM v_resultinfo WHERE stuName = %s;",
                        stuName)
                else: # 依据姓名和考试科目
                    result = service.query(
                        "SELECT stuID,stuName,CONCAT(gradeName,' ',className),kindName,subName,result FROM v_resultinfo WHERE stuName = %s and subName=%s;",
                        stuName,examSubject)
            else:
                if examSubject == '全部': # 依据姓名和考试类型
                    result = service.query(
                        "SELECT stuID,stuName,CONCAT(gradeName,' ',className),kindName,subName,result FROM v_resultinfo WHERE stuName = %s and kindName=%s;",
                        stuName, examKind)
                else: # 依据姓名和考试科目和考试类型、
                    result = service.query(
                        "SELECT stuID,stuName,CONCAT(gradeName,' ',className),kindName,subName,result FROM v_resultinfo WHERE stuName = %s and kindName=%s and subName=%s;",
                        stuName, examKind,examSubject)
        row = len(result)
        self.tableWidget.setRowCount(row)
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setHorizontalHeaderLabels(['学生编号','学生姓名','班级','考试类型','科目名称','成绩'])
        for i in range(row):
            for j in range(6):
                data = QTableWidgetItem(str(result[i][j]))
                self.tableWidget.setItem(i, j, data)
        if row > 0:
            QMessageBox.information(None,'提示','数据查询成功!',QMessageBox.Ok)
        else:
            QMessageBox.information(None,'提示','没有考试信息！请确认考试信息后重试~',QMessageBox.Ok)

    def bindSubject(self):
        self.cboSubject.addItem("全部")
        resu = service.query("SELECT subName FROM tb_subject;")
        for i in resu:
            self.cboSubject.addItem(i[0])

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "成绩信息查询"))
        self.label.setText(_translate("MainWindow", "学生姓名："))
        self.label_2.setText(_translate("MainWindow", "考试种类："))
        self.label_3.setText(_translate("MainWindow", "考试科目："))
        self.btnQuery.setText(_translate("MainWindow", "查询"))
        self.btnQuery_2.setText(_translate("MainWindow", "退出"))
