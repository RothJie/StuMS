# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'examkinds.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import sys
sys.path.append("/") # 因为grade.py需要先从当前路径切换到service中
from service import service

class Ui_MainWindow(QMainWindow):
    def __init__(self):
        super(Ui_MainWindow,self).__init__()
        self.setupUi(self)
        self.query()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(871, 652)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(710, 110, 101, 291))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.btnAddKind = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnAddKind.setFont(font)
        self.btnAddKind.setObjectName("btnAddKind")
        self.verticalLayout.addWidget(self.btnAddKind)
        self.btnUpdateKind = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnUpdateKind.setFont(font)
        self.btnUpdateKind.setObjectName("btnUpdateKind")
        self.verticalLayout.addWidget(self.btnUpdateKind)
        self.btnDeleteKind = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnDeleteKind.setFont(font)
        self.btnDeleteKind.setObjectName("btnDeleteKind")
        self.verticalLayout.addWidget(self.btnDeleteKind)
        self.btnQuitKind = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnQuitKind.setFont(font)
        self.btnQuitKind.setObjectName("btnQuitKind")
        self.verticalLayout.addWidget(self.btnQuitKind)
        self.layoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget_2.setGeometry(QtCore.QRect(20, 510, 591, 41))
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget_2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.editKindID = QtWidgets.QLineEdit(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(12)
        self.editKindID.setFont(font)
        self.editKindID.setObjectName("editKindID")
        self.horizontalLayout.addWidget(self.editKindID)
        self.label_2 = QtWidgets.QLabel(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.editKindName = QtWidgets.QLineEdit(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(12)
        self.editKindName.setFont(font)
        self.editKindName.setObjectName("editKindName")
        self.horizontalLayout.addWidget(self.editKindName)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(20, 10, 631, 471))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 871, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.btnAddKind.clicked.connect(self.add) # 为添加按钮绑定add()这个槽函数
        self.tableWidget.itemClicked.connect(self.getItem) # 为表格控件添加一个槽函数
        self.btnUpdateKind.clicked.connect(self.edit) # 为修改按钮绑定槽函数
        self.btnDeleteKind.clicked.connect(self.delete_) # 为删除按钮绑定槽函数
        self.btnQuitKind.clicked.connect(self.close)

    def query(self):
        """自定义一个槽函数，作用：在窗体启动时，将数据库中的考试类别信息读取出来。"""
        self.tableWidget.setRowCount(0)  # 清空表中的所有行
        # 调用公共类中的公共方法查询
        result = service.query('select * from tb_examkinds;')
        row = len(result)  # 获取到数据的行数
        self.tableWidget.setRowCount(row)  # 设置行数
        self.tableWidget.setColumnCount(2)  # 应为有2个字段所以要设置2列
        self.tableWidget.setHorizontalHeaderLabels(['类别编号', '类别名称'])  # 设置表格的标题
        for i in range(row):
            for j in range(self.tableWidget.columnCount()):
                date_single = QTableWidgetItem(str(result[i][j]))  # 将数据处理为表格控件能接受的数据对象
                self.tableWidget.setItem(i, j, date_single)  # 将数据依次放入表格中

    def getName(self,name):     # (name,) 元组类型，其中只有一个函数时就要加一个，。
        """到数据库中查找看是否有 name考试科目 的存在"""
        result = service.query('select * from tb_examkinds where kindName = %s;',(name,))
        return len(result)

    def add(self):
        """执行添加操作前，需要获取添加的考试科目的ID和考试科目的名称"""
        kindid = self.editKindID.text()
        kindname  = self.editKindName.text()
        if kindid != '' and kindname != '':
            if self.getName(kindname) > 0:  # 说明要添加的数据在数据库中已经存在
                self.editKindName.setText('')
                QMessageBox.information(None, '提示', '考试科目已经存在！请重新输入！！')
            else:
                resl = service.execute('insert into tb_examkinds(kindID,kindName) values (%s,%s)', (kindid, kindname))
                if resl > 0:
                    self.query()  # 重新加载表格数据
                    QMessageBox.information(None, '提示', '信息添加成功了！', QMessageBox.Ok)
        else:
            QMessageBox.warning(None,'警告','类别编号或者类别名称不能为空！！',QMessageBox.Ok)

    def getItem(self,item):
        """获取选中的表格内容，item代表鼠标点击的那一行"""
        if item.column() == 0:  # 第一列是编号
            self.select = item.text()
            self.editKindID.setText(self.select)   # 将表中被选中的ID放到相应的ID输入控件中

    def edit(self):
        """用于执行修改操作的槽函数"""
        try:
            if self.select != '':
                kindname = self.editKindName.text()
                if kindname != '':
                    if self.getName(kindname) > 0:
                        QMessageBox.warning(None, '警告', '需要修改的类别名称已经存在！！！', QMessageBox.Ok)
                    else:
                        resl = service.execute("update tb_examkinds set kindName=%s where kindID=%s;",
                                               (kindname, self.select))
                        if resl > 0:
                            self.query()
                            QMessageBox.information(None, '提示', "科目类别数据修改成功！", QMessageBox.Ok)
                else:
                    QMessageBox.warning(None,'警告','需要修改的类别名称不能为空！！！',QMessageBox.Ok)
        except Exception as e:
            print(e)
            QMessageBox.warning(None,'警告','请选中需要修改的类别编号！！！',QMessageBox.Ok)

    def delete_(self):
        try:
            if self.select != '':
                ree = service.execute("delete from tb_examkinds where kindID=%s;",(self.select,))
                if ree > 0:
                    self.query()
                    QMessageBox.information(None,'提示','删除成功！', QMessageBox.Ok)
        except Exception as e:
            print(e)
            QMessageBox.warning(None,'警告','请选中需要删除的类别编号！',QMessageBox.Ok)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "考试类别设置"))
        self.btnAddKind.setText(_translate("MainWindow", "增加"))
        self.btnUpdateKind.setText(_translate("MainWindow", "修改"))
        self.btnDeleteKind.setText(_translate("MainWindow", "删除"))
        self.btnQuitKind.setText(_translate("MainWindow", "退出"))
        self.label.setText(_translate("MainWindow", "类别编号："))
        self.label_2.setText(_translate("MainWindow", "类别名称："))
